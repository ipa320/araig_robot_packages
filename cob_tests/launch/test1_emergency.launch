<launch>

<!-- param -->
    <rosparam command="load" file="$(find cob_tests)/config/test1_emergency.yaml" />

    <arg name="src1" default ="/dev/video2" />
    <arg name="src2" default ="/dev/video4" />
    <arg name="port" default="/dev/ttyACM0" />
<!-- sensors -->
    <include file="$(find cob_tests)/launch/includes/common.launch">
        <args name="src1" value="$(arg cam1)" />
        <args name="src2" value="$(arg cam2)" />
        <args name="port" value="$(arg port)" />
    </include>

<!-- test runner -->
    <node pkg="araig_test_runners" type="test_1_emergency" name="test_1_runner_node" output="screen">
    </node>

<!-- interpreters -->
    <node pkg="araig_interpreters" type="velocity_interpreter" name="velocity_interpreter_node" output="screen">
        <remap from="/start" to="/signal/runner/start_robot"/>
        <remap from="/velocity" to="/base/twist_controller/command"/>    
    </node>

<!-- calculators -->
    <!-- get speed from /odom -->
    <node name="focus_odom_x" pkg="topic_tools" type="transform" args="/base/odometry_controller/odometry /data/robot/odom/twist/linear_x std_msgs/Float64 'm.twist.twist.linear.x'" />

    <!-- robot location -->
    <node pkg="araig_interpreters" type="marvel_location_interpreter" name="marvel_interpreter" output="screen">
        <remap from="/marvel_interpreter/beacon11" to="/data/interpreter/location/robot"/>
    </node>

    <!-- transfer emergency to signal -->
    <node name="emergency_signal" pkg="topic_tools" type="transform"     
    args="/emergency_stop_state /signal/robot/emergency araig_msgs/BoolStamped
    'araig_msgs.msg.BoolStamped(header=std_msgs.msg.Header(stamp=rospy.Time.now()),
    data=True if m.emergency_state==1 else False)' 
        --import cob_msgs araig_msgs rospy std_msgs" />

    <!-- robot_has_stopped_node -->
    <node pkg="araig_calculators" type="comp_param_node" name="robot_has_stopped_node" output="screen">
        <remap from="/in_float" to="/data/robot/odom/twist/linear_x"/>
        <remap from="/out_bool" to="/signal/calc/robot_has_stopped"/>
    </node>

    <!-- braking_distance_node -->
    <node pkg="araig_calculators" type="diff_pose_temporal_node" name="braking_distance_node" output="screen">
        <remap from="/in_start" to="/signal/robot/emergency"/>
        <remap from="/in_stop" to="/signal/calc/robot_has_stopped"/>
        <remap from="/in_pose" to="/data/interpreter/location/robot"/>
        <remap from="/out_disp_position" to="/data/calc/braking_distance"/>
    </node>

    <!-- braking_time_node -->
    <node pkg="araig_calculators" type="diff_time_node" name="braking_time_node" output="screen">
        <remap from="/in_start" to="/signal/robot/emergency"/>
        <remap from="/in_stop" to="/signal/calc/robot_has_stopped"/>
        <remap from="/out_duration" to="/data/calc/braking_time"/>
    </node>

    <!-- logging -->
    <!-- folder_bagger_node -->
    <node pkg="araig_calculators" type="rosbagger_node" name="folder_bagger_node" output="screen">
        <remap from="/start" to="/signal/ui/start_test"/>
        <remap from="/stop" to="/signal/runner/test_completed"/>
        <remap from="/test_failed" to="/signal/runner/test_failed"/>
        <remap from="/test_succeeded" to="/signal/runner/test_succeeded"/>
    </node>

    <!-- param_logger_node -->
    <node pkg="araig_calculators" type="rosparam_logger_node" name="param_logger_node" output="log">
        <remap from="/start" to="/signal/ui/start_test"/>
        <remap from="/stop" to="/signal/runner/test_completed"/>
    </node>

    <!-- results_logger_node -->
    <node pkg="araig_calculators" type="results_logger_node" name="results_logger_node" output="log">
        <remap from="/start" to="/signal/ui/start_test"/>
        <remap from="/stop" to="/signal/runner/test_completed"/>
        <remap from="/test_failed" to="/signal/runner/test_failed"/>
        <remap from="/test_succeeded" to="/signal/runner/test_succeeded"/>
    </node>

    <node name="plotter" type="rqt_multiplot" pkg="rqt_multiplot"
        args="--multiplot-config $(find turtlebot3_sim_tests)/config/plotter/speed_plot.xml --multiplot-run-all">
    </node>

</launch>